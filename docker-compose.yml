version: '3.8'

services:
  # Main RAG Chatbot API
  rag-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-chatbot-api
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - PYTHONPATH=/app
      - RAG_ENV=production
      - LOG_LEVEL=INFO
    command: ["python", "-m", "uvicorn", "src.web_interface.fastapi_app:app", "--host", "0.0.0.0", "--port", "8000"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - rag-network

  # Streamlit Web Interface
  rag-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-chatbot-web
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - PYTHONPATH=/app
      - RAG_ENV=production
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    command: ["streamlit", "run", "src/web_interface/streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]
    depends_on:
      - rag-api
    restart: unless-stopped
    networks:
      - rag-network

  # ChromaDB (if using Chroma as vector store)
  chromadb:
    image: chromadb/chroma:latest
    container_name: rag-chromadb
    ports:
      - "8002:8000"
    volumes:
      - ./data/chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    restart: unless-stopped
    networks:
      - rag-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: rag-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - rag-network

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: rag-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - rag-api
      - rag-web
    restart: unless-stopped
    networks:
      - rag-network

volumes:
  redis_data:

networks:
  rag-network:
    driver: bridge
